1)
Write a function that takes an input String (sentence) and generates a new String (modified sentence) by reversing the words in the original String, maintaining the words position.

In addition, the function should be able to control the reversing of the case (upper or lowercase) based on a case_option parameter, as follows:

If case_option = 0, normal reversal of words i.e., if the original sentence is “Wipro TechNologies BangaLore”, the new reversed sentence should be “orpiW seigoloNhceT eroLagnaB”.

If case_option = 1, reversal of words with retaining position’s case i.e., if the original sentence is “Wipro TechNologies BangaLore”, the new reversed sentence should be “Orpiw SeigOlonhcet ErolaGnab”.

Note that positions 1, 7, 11, 20 and 25 in the original string are uppercase W, T, N, B and L.

Similarly, positions 1, 7, 11, 20 and 25 in the new string are uppercase O, S, O, E and G.

NOTE: 
1.      Only space character should be treated as the word separator i.e., “Hello World” should be treated as two separate words, “Hello” and “World”. However, “Hello,World”, “Hello;World”, “Hello-World” or “Hello/World” should be considered as a single word.

2.      Non-alphabetic characters in the String should not be subjected to case changes. For example, if case option = 1 and the original sentence is “Wipro TechNologies, Bangalore” the new reversed sentence should be “Orpiw ,seiGolonhceT Erolagnab”. Note that comma has been treated as part of the word “Technologies,” and when comma had to take the position of uppercase T it remained as a comma and uppercase T took the position of comma. However, the words “Wipro and Bangalore” have changed to “Orpiw” and “Erolagnab”.

3.      Kindly ensure that no extra (additional) space characters are embedded within the resultant reversed String.

Examples:

S. No.

input1

input2

output

1

Wipro Technologies Bangalore

0

orpiW seigolonhceT erolagnaB

2

Wipro Technologies, Bangalore

0

orpiW ,seigolonhceT erolagnaB

3

Wipro Technologies Bangalore

1

Orpiw Seigolonhcet Erolagnab

4

Wipro Technologies, Bangalore

1

Orpiw ,seigolonhceT Erolagnab
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input1 = scanner.nextLine();
        int input2 = scanner.nextInt();
        System.out.println(reverseString(input1, input2));
    }

    public static String reverseString(String input, int caseOption) {
        String[] words = input.split(" ");
        StringBuilder reversedString = new StringBuilder();

        for (String word : words) {
            String reversedWord = new StringBuilder(word).reverse().toString();

            if (caseOption == 1) {
                reversedWord = retainOriginalCase(word, reversedWord);
            }

            reversedString.append(reversedWord).append(" ");
        }

        return reversedString.toString().trim();
    }

    public static String retainOriginalCase(String original, String reversed) {
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < original.length(); i++) {
            char originalChar = original.charAt(i);
            char reversedChar = reversed.charAt(i);

            if (Character.isUpperCase(originalChar)) {
                result.append(Character.toUpperCase(reversedChar));
            } else if (Character.isLowerCase(originalChar)) {
                result.append(Character.toLowerCase(reversedChar));
            } else {
                result.append(reversedChar);
            }
        }
        return result.toString();
    }
}
	Input	Expected	Got	
Wipro Technologies Bangalore
0
orpiW seigolonhceT erolagnaB
orpiW seigolonhceT erolagnaB
Wipro Technologies, Bangalore
0
orpiW ,seigolonhceT erolagnaB
orpiW ,seigolonhceT erolagnaB
Wipro Technologies Bangalore
1
Orpiw Seigolonhcet Erolagnab
Orpiw Seigolonhcet Erolagnab
Wipro Technologies, Bangalore
1
Orpiw ,seigolonhceT Erolagnab
Orpiw ,seigolonhceT Erolagnab
2)
You are provided with a string which has a sequence of 1’s and 0’s.

This sequence is the encoded version of a English word. You are supposed write a program to decode the provided string and find the original word.

Each alphabet is represented by a sequence of 0s.

This is as mentioned below:

Z : 0

Y : 00

X : 000

W : 0000

V : 00000

U : 000000

T : 0000000

and so on upto A having 26 0’s (00000000000000000000000000).

The sequence of 0’s in the encoded form are separated by a single 1 which helps to distinguish between 2 letters.

Example 1:

input1: 010010001

The decoded string (original word) will be: ZYX

Example 2:

input1: 00001000000000000000000100000000000100000000010000000000001

The decoded string (original word) will be: WIPRO

Note: The decoded string must always be in UPPER case.
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        System.out.println(decodeString(input));
    }

    public static String decodeString(String input) {
        StringBuilder decodedString = new StringBuilder();
        String[] parts = input.split("1");
        for (String part : parts) {
            if (!part.isEmpty()) {
                char c = (char) ('Z' - (part.length() - 1));
                decodedString.append(c);
            }
        }
        return decodedString.toString();
    }
}
	Input	Expected	Got	
010010001
ZYX
ZYX
00001000000000000000000100000000000100000000010000000000001
WIPRO
WIPRO
3)
Given two char arrays input1[] and input2[] containing only lower case alphabets, extracts the alphabets which are present in both arrays (common alphabets).

Get the ASCII values of all the extracted alphabets.

Calculate sum of those ASCII values. Lets call it sum1 and calculate single digit sum of sum1, i.e., keep adding the digits of sum1 until you arrive at a single digit.

Return that single digit as output.

Note:

1.      Array size ranges from 1 to 10.

2.      All the array elements are lower case alphabets.

3.      Atleast one common alphabet will be found in the arrays.

Example 1:

input1: {‘a’, ‘b’, ‘c’}

input2: {‘b’, ’c’}

output: 8

Explanation:

‘b’ and ‘c’ are present in both the arrays.

ASCII value of ‘b’ is 98 and ‘c’ is 99.

98 + 99 = 197

1 + 9 + 7 = 17

1 + 7 = 8


For example:

Input	Result
a b c
b c
8
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

     
        String[] input1 = scanner.nextLine().split(" ");

       
        String[] input2 = scanner.nextLine().split(" ");

        char[] charArray1 = new char[input1.length];
        char[] charArray2 = new char[input2.length];

        for (int i = 0; i < input1.length; i++) {
            charArray1[i] = input1[i].charAt(0);
        }

        for (int i = 0; i < input2.length; i++) {
            charArray2[i] = input2[i].charAt(0);
        }

        System.out.println(findSingleDigitSum(charArray1, charArray2));
    }

    public static int findSingleDigitSum(char[] charArray1, char[] charArray2) {
        int sum = 0;

        for (char c1 : charArray1) {
            for (char c2 : charArray2) {
                if (c1 == c2) {
                    sum += c1;
                }
            }
        }

        return getSingleDigitSum(sum);
    }

    public static int getSingleDigitSum(int sum) {
        while (sum > 9) {
            sum = getSumOfDigits(sum);
        }
        return sum;
    }

    public static int getSumOfDigits(int num) {
        int sum = 0;
        while (num > 0) {
            sum += num % 10;
            num /= 10;
        }
        return sum;
    }
}
Input	Expected	Got	
a b c
b c
8
8
